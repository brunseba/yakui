FROM node:22-alpine

# Set working directory
WORKDIR /app

# Install dependencies and kubectl
RUN apk add --no-cache curl \
    && curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
    && chmod +x kubectl \
    && mv kubectl /usr/local/bin/ \
    && mkdir -p /home/node/.kube \
    && chown -R node:node /home/node/.kube

# Copy package files from project root (relative to docker context)
COPY package*.json ./

# Install Node.js dependencies
RUN npm cache clean --force \
    && npm ci --only=production

# Copy backend source files
COPY tools/ ./

# Create a simple startup script that prints multicluster info and starts the app
RUN cat > /app/start.sh << 'EOF'
#!/bin/sh
echo "üöÄ Starting Kubernetes Admin UI - Multicluster Backend"
echo "=================================================="
echo "üîß Configuration:"
echo "  - Node Environment: ${NODE_ENV:-development}"
echo "  - API Port: ${API_PORT:-3001}"
echo "  - Multicluster: ${ENABLE_MULTICLUSTER:-true}"
echo "  - Auto-detect: ${KUBECONFIG_AUTO_DETECT:-true}"
echo ""

# Check kubectl availability
if command -v kubectl >/dev/null 2>&1; then
    echo "‚úÖ kubectl is available"
else
    echo "‚ö†Ô∏è  kubectl not available"
fi

echo "üé¨ Starting dev server..."
# Run the dev server directly since tools are copied to /app root
exec node dev-server.cjs
EOF

# Make the script executable
RUN chmod +x /app/start.sh

# Switch to node user
USER node

# Expose port
EXPOSE 3001

# Set environment defaults for multicluster
ENV NODE_ENV=development \
    API_PORT=3001 \
    API_TIMEOUT=30000 \
    ENABLE_MULTICLUSTER=true \
    KUBECONFIG_AUTO_DETECT=true \
    CLUSTER_CONTEXT=

# Health check with more graceful failure for multicluster
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || \
      (echo "Health check failed - this may be normal in multicluster mode without active cluster" && exit 1)

# Use the startup script
CMD ["/bin/sh", "/app/start.sh"]
